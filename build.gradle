plugins {
    id 'java'
    id 'application'
}

repositories {
    jcenter()

}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'org.datavec:datavec-api:1.0.0-beta7'
    implementation 'org.datavec:datavec-data-image:1.0.0-beta7'
    implementation 'org.pytorch:pytorch_java_only:1.5.0'
    implementation 'org.nd4j:nd4j-api:1.0.0-beta7'
    implementation 'org.nd4j:nd4j-native:1.0.0-beta7'
    implementation 'org.nd4j:nd4j-native-platform:1.0.0-beta7'
    implementation 'org.springframework:spring-core:2.5.6'
    implementation 'org.slf4j:slf4j-api:1.7.5'
    implementation 'org.slf4j:slf4j-log4j12:1.7.5'
}

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
        	'Implementation-Version': 1.0,
        	'Main-Class': 'java.retinaface4j.Detector'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

def LIBTORCH_HOME = System.getenv('LIBTORCH_HOME')
if (!LIBTORCH_HOME) {
  throw new RuntimeException('LIBTORCH_HOME not present in environment.');
}
if (!file(LIBTORCH_HOME).isDirectory()) {
  throw new RuntimeException('LIBTORCH_HOME does not refer to a directory.');
}

application {
    mainClassName = 'retinaface4j.App'
    applicationDefaultJvmArgs = ["-Djava.library.path=$LIBTORCH_HOME/lib"]
}
